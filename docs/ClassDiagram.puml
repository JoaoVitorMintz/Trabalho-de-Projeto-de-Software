@startuml ClassDiagram
' =============================
' Classes de Sensores
' =============================
class Sensor {
  + boolean validarSensores()
}

class SensorTemperatura {
  - double Temperatura
  + boolean ValidarTemperatura()
}

class SensorUmidade {
  - double Umidade
  + boolean ValidarUmidade()
}

class SensorInfravermelho {
  - boolean Ativo
  + boolean ValidarPragas()
}

Sensor <|-- SensorTemperatura
Sensor <|-- SensorUmidade
Sensor <|-- SensorInfravermelho

' =============================
' Classes de Drones e MissÃµes
' =============================
class Drone {
  - int ID
  - List<Sensores> sensores
  - string Status
  + void atualizarStatus(string novoStatus)
}

class MissoesVoo {
  - date Data
  - string idMissao
  - CadastroArea area
  - Drones drone
  + void AtribuirDrone(Drones drone)
  + boolean verificarSopreposicao()
}

class CadastroArea {
  - double Tamanho
  - string Localizacao
  - string TipoCultivo
}

class RegistroDados {
  - List<File> Imagens
  - List<double> ValoresSensores
  + void salvarDados()
}

class Relatorio {
  - List<double> medicoes
  - int Qtd_Voo
  + void gerarResumo()
}

Drone --> "1..*" Sensor
MissoesVoo --> Drone
MissoesVoo --> CadastroArea
MissoesVoo --> RegistroDados
RegistroDados --> Relatorio

' =============================
' Outras Classes
' =============================

class Autorizacao {
  - string usuario
  - string senhaHash
  - string role
  + string verificarRole()
  + boolean validarSenha(string senhaDigitada)
}

class Checklist {
  - double Bateria
  - List<Boolean> SensoresFunc
  + boolean validarChecklist()
}
@enduml

